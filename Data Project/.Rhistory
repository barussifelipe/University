correlation_table[1:6, ]
correlation_table = data.frame(x = cor(returns_no_date)[1, ])
#First the Impact
correlation_table[1:6, ]
#First the Impact
correlation_table[1:6, 1]
correlation_table
geom_bar(aes(x = x))
labels(correlation_table)
labels(correlation_table)[1]
ggplot(data = correlation_table, aes(x = labels(correlation_table), y = correlation_table$x))
ggplot(data = correlation_table, aes(x = labels(correlation_table), y = x))
labels(correlation_table)[1]
ggplot(data = correlation_table, aes(x = labels(correlation_table)[1], y = x))
x
ggplot(data = correlation_table, aes(x = labels(correlation_table)[1], y = correlation_table$x))
geom_bar()
lables = labels(correlation_table)[1]
ggplot(data = correlation_table, aes(x = x, colour = lables))
ggplot(data = correlation_table, aes(y = x)
ggplot(data = correlation_table, aes(y = x))+
ggplot(data = correlation_table, aes(y = x)) +
geom_bar()
hist(correlation_table)
hist(correlation_table$x)
ggplot(data = correlation_table, aes(x =  labels, y = x))
ggplot(data = correlation_table, aes(x =  labels, y = x)) +
geom_bar()
labels = labels(correlation_table)[1]
ggplot(data = correlation_table, aes(x =  labels, y = x)) +
geom_bar()
ggplot(data = correlation_table, aes(x =  labels) +
geom_bar()
geom_bar()
ggplot(data = correlation_table, aes(x =  labels) +
geom_bar()
geom_bar()
ggplot(data = correlation_table, aes(x = x) +
geom_bar()
ggplot(data = correlation_table, aes(x = labels, y = x) +
ggplot(data = correlation_table, aes(x = labels, y = x) +
geom_col()
geom_col()
ggplot(data = correlation_table, aes(x = labels, y = x) +
ggplot(data = correlation_table, aes(x = labels, y = x)) +
geom_col()
ggplot(data = correlation_table, aes(x = labels, y = x)) +
ggplot(data = correlation_table, aes(x = labels, y = x)) +
geom_col()
ggplot(data = correlation_table, aes(x = x)) +
geom_col()
ggplot(data = correlation_table, aes(x = x, y = labels)) +
geom_col()
ggplot(data = correlation_table, aes(x = x, y = labels)) +
geom_col()
ggplot(data = correlation_table, aes(y = labels)) +
geom_col()
ggplot(data = correlation_table, aes(weight = x, y = labels)) +
geom_col()
ggplot(data = correlation_table, aes(x = x, y = labels)) +
geom_col()
labels = labels(correlation_table)[1]
correlation_table
ggplot(data = correlation_table, aes(x = labels, y = x)) +
geom_col()
ggplot(data = correlation_table, aes(x = labels, y = x)) +
geom_col()
ggplot(data = correlation_table, aes(x = c(labels), y = x)) +
geom_col()
labels(correlation_table)[1]
labels(correlation_table)[1]
labels(correlation_table)
labels = labels(correlation_table)[1]
labels(correlation_table)[1]
typeof(labels)
typeof(labels)
[1]
labels = labels(correlation_table)[0]
symnum(correlation_table)
labels = rownames(correlation_table)
labels
ggplot(data = correlation_table, aes(x = labels, y = x)) +
geom_col()
ggplot(data = correlation_table, aes(x = labels, y = x, col = labels)) +
geom_col() +
ggplot(data = correlation_table, aes(x = labels, y = x, col = labels)) +
geom_col() +
ggplot(data = correlation_table, aes(x = labels, y = x, colours = labels)) +
geom_col() +
ggplot(data = correlation_table, aes(x = labels, y = x, fill = labels)) +
geom_col() +
ggplot(data = correlation_table, aes(x = labels, y = x, color = labels)) +
geom_col()
ggplot(data = correlation_table, aes(x = labels, y = x, colour = labels)) +
geom_col()
ggplot(data = correlation_table, aes(x = labels, y = x, fill = labels)) +
geom_col()
ggplot(data = correlation_table, aes(x = labels, y = x, fill = labels, colour = "black")) +
geom_col()
ggplot(data = correlation_table, aes(x = labels, y = x)) +
geom_col() +
scale_fill_gradient2(low = "red", high = "blue", midpoint = 0)
ggplot(data = correlation_table, aes(x = labels, y = x)) +
geom_col() +
scale_fill_gradient2(low = "red", high = "blue", midpoint = 0) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x)) +
geom_col() +
scale_fill_gradient2(low = "red", high = "blue") +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(low = "red", high = "blue") +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(low = "purple", high = "blue", mid = "red") +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(low = "purple", high = "blue", mid = "red", midpoint = 0.5) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(low = "purple", high = "blue", mid = "red", midpoint = 0.25) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = labels)) +
geom_col() +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(low = "darkgray", high = "black", mid = "gray", midpoint = 0.25) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(low = "darkgray", high = "black", mid = "gray", midpoint = 0.1) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(low = "purple", high = "blue", mid = "red", midpoint = 0.1) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(low = "purple", high = "blue", mid = "red", midpoint = -0.5) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(low = "purple", high = "blue", mid = "red", midpoint = -0.1) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(low = "purple", high = "blue", mid = "red", midpoint = -1) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(low = "purple", high = "blue", mid = "red", midpoint = -0.5) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(low = "purple", high = "blue", mid = "red", midpoint = -0.2) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(low = "purple", high = "blue", mid = "red", midpoint = -0.3) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(low = "purple", high = "blue", mid = "red", midpoint = -0.4) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(low = "purple", high = "blue", mid = "red", midpoint = -0.1) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(low = "purple", high = "blue", mid = "red", midpoint = 0) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(low = "purple", high = "blue", mid = "red", midpoint = 0.2) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(low = "purple", high = "blue", mid = "red") +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
correlation_table
mean(correlation_table)
mean(correlation_table$x)
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(low = "red", high = "blue", midpoint = mean(correlation_table$x)) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(low = "purple", high = "blue", mid = "red", midpoint = mean(correlation_table$x)) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(midpoint = mean(correlation_table$x)) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
correlation_table
correlation_table = data.frame(x = cor(returns_no_date)[1, -1])
correlation_table
labels = rownames(correlation_table)
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(midpoint = mean(correlation_table$x)) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(high = "blue", low = "red", midpoint = mean(correlation_table$x)) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = x, fill = x)) +
geom_col() +
scale_fill_gradient2(high = "blue", low = "red", mid = "purple", midpoint = mean(correlation_table$x)) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = values, fill = values)) +
geom_col() +
scale_fill_gradient2(high = "blue", low = "red", mid = "purple", midpoint = mean(correlation_table$x)) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
correlation_table = data.frame(values = cor(returns_no_date)[1, -1])
ggplot(data = correlation_table, aes(x = labels, y = values, fill = values)) +
geom_col() +
scale_fill_gradient2(high = "blue", low = "red", mid = "purple", midpoint = mean(correlation_table$x)) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = values, fill = values)) +
geom_col() +
scale_fill_gradient2(high = "blue", low = "red", mid = "purple", midpoint = mean(correlation_table$x)) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = values, fill = values)) +
geom_col() +
scale_fill_gradient2(high = "blue", low = "red", mid = "purple", midpoint = mean(correlation_table$values)) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values")
ggplot(data = correlation_table, aes(x = labels, y = values, fill = values)) +
geom_col() +
scale_fill_gradient2(high = "blue", low = "red", mid = "purple", midpoint = mean(correlation_table$values)) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values", caption = "(based on data from Yahoo Finance")
ggplot(data = correlation_table, aes(x = labels, y = values, fill = values)) +
geom_col() +
scale_fill_gradient2(high = "blue", low = "red", mid = "purple", midpoint = mean(correlation_table$values)) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values", caption = "(based on data from Yahoo Finance)")
ggplot(data = correlation_table, aes(x = labels, y = values, fill = values)) +
geom_col() +
scale_fill_gradient2(name = "Correlation Values",
high = "blue", low = "red", mid = "purple", midpoint = mean(correlation_table$values)) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values", caption = "(based on data from Yahoo Finance)")
ggplot(data = correlation_table, aes(x = labels, y = values, fill = values)) +
geom_col() +
scale_fill_gradient2(name = "Gradient",
high = "blue", low = "red", mid = "purple", midpoint = mean(correlation_table$values)) +
labs(title = "Microsoft Correlation Table", x = "Products", y = "Values", caption = "(based on data from Yahoo Finance)")
rownames(correlation_table)
correlation_table["GC.F", ]
correlation_table[commodity, ]
or (commodity in labels) {
for (commodity in labels) {
correlation_table[commodity, ]
}
correlation_table[commodity, ]
correlation_table[commodity, ]
print(correlation_table[commodity, ])
correlation_table
y =
returns_no_date[, commodity]
returns_no_date[, commodity]
returns_no_date
partial = data.frame(y = returns_no_date[, commodity], x = returns_no_date[, 1])
partial
for (commodity in labels) {
partial = data.frame(y = returns_no_date[, commodity], x = returns_no_date[, 1])
ggplot(data = partial, aes(x = x, y = y, col = "cyan")) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, col = "blue") +
labs(title = glue("MSFT x {commodity} Linear Regression"), x = commodity, y = "MSFT")
}
for (commodity in labels) {
partial = data.frame(y = returns_no_date[, commodity], x = returns_no_date[, 1])
ggplot(data = partial, aes(x = x, y = y, col = "cyan")) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, col = "blue") +
labs(title = sprintf("MSFT x %s Linear Regression", commodity), x = commodity, y = "MSFT")
}
commodity = "GC.F"
partial = data.frame(y = returns_no_date[, commodity], x = returns_no_date[, 1])
ggplot(data = partial, aes(x = x, y = y, col = "cyan")) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, col = "blue") +
labs(title = sprintf("MSFT x %s Linear Regression", commodity), x = commodity, y = "MSFT")
ggplot(data = partial, aes(x = x, y = y,)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, col = "blue") +
labs(title = sprintf("MSFT x %s Linear Regression", commodity), x = commodity, y = "MSFT")
ggplot(data = partial, aes(x = x, y = y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, col = "blue") +
labs(title = sprintf("MSFT x %s Linear Regression", commodity), x = commodity, y = "MSFT")
library(tidyr)
returns
returns_long = pivot_longer(returns, cols = -Date, names_to = "Commodity", values_to = "Return")
returns_long
geom_point() +
geom_smooth(method = "lm", se = FALSE, col = "blue") +
labs(title = "MSFT Correlation Lines")
ggplot(data = partial, aes(x = Date, y = Return)) +
facet_wrap(~ Commodity) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, col = "blue") +
labs(title = "MSFT Correlation Lines")
ggplot(data = partial, aes(x = Date, y = Return)) +
facet_wrap(~ returns_long$Commodity) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, col = "blue") +
labs(title = "MSFT Correlation Lines")
ggplot(data = partial, aes(x = returns_no_date[, 1], y = Return)) +
facet_wrap(~ returns_long$Commodity) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, col = "blue") +
labs(title = "MSFT Correlation Lines")
ggplot(data = returns_long, aes(x = returns_no_date[, 1], y = Return)) +
facet_wrap(~ returns_long$Commodity) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, col = "blue") +
labs(title = "MSFT Correlation Lines")
ggplot(data = returns_long, aes(x = Date, y = Return)) +
facet_wrap(~ returns_long$Commodity) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, col = "blue") +
labs(title = "MSFT Correlation Lines")
ggplot(data = returns_long, aes(x = returns_long[returns_long$Commodity == "MSFT"], y = Return)) +
facet_wrap(~ returns_long$Commodity) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, col = "blue") +
labs(title = "MSFT Correlation Lines")
#The others shouldn't be correlated, we will call the No Impact group.
#Brent Crude Oil, Natural Gas, Corn, Oats, Rice, Soybeans, Cocoa, Coffee, Cotton, Sugar.
stock = "MSFT"
ggplot(data = returns_long, aes(x = Return, y = stock)) +
facet_wrap(~ Commodity) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, col = "blue") +
labs(title = "MSFT Correlation Lines")
#We will have two measures of extremity. 2std from the mean and 3std from the mean.
#We can affirm that the first measure we are outside of 95% of the cases. The second 99.7% of the cases.
#However, to be able to affirm this, we need to check the histogram of each commodity, since this holds in
#a normal distribution.
ggplot(data = returns_long, aes(x = Returns)) +
facet_wrap(~ Commodity) +
geom_histogram()
#We will have two measures of extremity. 2std from the mean and 3std from the mean.
#We can affirm that the first measure we are outside of 95% of the cases. The second 99.7% of the cases.
#However, to be able to affirm this, we need to check the histogram of each commodity, since this holds in
#a normal distribution.
ggplot(data = returns_long, aes(x = Return)) +
facet_wrap(~ Commodity) +
geom_histogram()
#We will have two measures of extremity. 2std from the mean and 3std from the mean.
#We can affirm that the first measure we are outside of 95% of the cases. The second 99.7% of the cases.
#However, to be able to affirm this, we need to check the histogram of each commodity, since this holds in
#a normal distribution.
ggplot(data = returns_long, aes(x = Return, fill = Commodity)) +
facet_wrap(~ Commodity) +
geom_histogram()
#We will have two measures of extremity. 2std from the mean and 3std from the mean.
#We can affirm that the first measure we are outside of 95% of the cases. The second 99.7% of the cases.
#However, to be able to affirm this, we need to check the histogram of each commodity, since this holds in
#a normal distribution.
ggplot(data = returns_long, aes(x = Return, fill = Commodity, binwidth= 50)) +
facet_wrap(~ Commodity) +
geom_histogram()
#We will have two measures of extremity. 2std from the mean and 3std from the mean.
#We can affirm that the first measure we are outside of 95% of the cases. The second 99.7% of the cases.
#However, to be able to affirm this, we need to check the histogram of each commodity, since this holds in
#a normal distribution.
ggplot(data = returns_long, aes(x = Return, fill = Commodity)) +
facet_wrap(~ Commodity) +
geom_histogram(binwidth = 50)
#We will have two measures of extremity. 2std from the mean and 3std from the mean.
#We can affirm that the first measure we are outside of 95% of the cases. The second 99.7% of the cases.
#However, to be able to affirm this, we need to check the histogram of each commodity, since this holds in
#a normal distribution.
ggplot(data = returns_long, aes(x = Return, fill = Commodity)) +
facet_wrap(~ Commodity) +
geom_histogram(binwidth = 0.5)
#We will have two measures of extremity. 2std from the mean and 3std from the mean.
#We can affirm that the first measure we are outside of 95% of the cases. The second 99.7% of the cases.
#However, to be able to affirm this, we need to check the histogram of each commodity, since this holds in
#a normal distribution.
ggplot(data = returns_long, aes(x = Return, fill = Commodity)) +
facet_wrap(~ Commodity) +
geom_histogram(binwidth = 0.1)
#We will have two measures of extremity. 2std from the mean and 3std from the mean.
#We can affirm that the first measure we are outside of 95% of the cases. The second 99.7% of the cases.
#However, to be able to affirm this, we need to check the histogram of each commodity, since this holds in
#a normal distribution.
ggplot(data = returns_long, aes(x = Return, fill = Commodity)) +
facet_wrap(~ Commodity) +
geom_histogram(binwidth = 0.001)
#We will have two measures of extremity. 2std from the mean and 3std from the mean.
#We can affirm that the first measure we are outside of 95% of the cases. The second 99.7% of the cases.
#However, to be able to affirm this, we need to check the histogram of each commodity, since this holds in
#a normal distribution.
ggplot(data = returns_long, aes(x = Return, fill = Commodity)) +
facet_wrap(~ Commodity) +
geom_histogram(binwidth = 0.05)
#We will have two measures of extremity. 2std from the mean and 3std from the mean.
#We can affirm that the first measure we are outside of 95% of the cases. The second 99.7% of the cases.
#However, to be able to affirm this, we need to check the histogram of each commodity, since this holds in
#a normal distribution.
ggplot(data = returns_long, aes(x = Return, fill = Commodity)) +
facet_wrap(~ Commodity) +
geom_histogram(binwidth = 0.1)
#We will have two measures of extremity. 2std from the mean and 3std from the mean.
#We can affirm that the first measure we are outside of 95% of the cases. The second 99.7% of the cases.
#However, to be able to affirm this, we need to check the histogram of each commodity, since this holds in
#a normal distribution.
ggplot(data = returns_long, aes(x = Return, fill = Commodity)) +
facet_wrap(~ Commodity) +
geom_histogram(bins = 40)
#We will have two measures of extremity. 2std from the mean and 3std from the mean.
#We can affirm that the first measure we are outside of 95% of the cases. The second 99.7% of the cases.
#However, to be able to affirm this, we need to check the histogram of each commodity, since this holds in
#a normal distribution.
ggplot(data = returns_long, aes(x = Return, fill = Commodity)) +
facet_wrap(~ Commodity) +
geom_histogram(bins = 50)
#We will have two measures of extremity. 2std from the mean and 3std from the mean.
#We can affirm that the first measure we are outside of 95% of the cases. The second 99.7% of the cases.
#However, to be able to affirm this, we need to check the histogram of each commodity, since this holds in
#a normal distribution.
ggplot(data = returns_long, aes(x = Return, fill = Commodity)) +
facet_wrap(~ Commodity) +
stat_function(fun = dnorm, args = list(mean = mean(Return), sd = sd(Return), col = "blue")) +
geom_histogram(bins = 50)
#We will have two measures of extremity. 2std from the mean and 3std from the mean.
#We can affirm that the first measure we are outside of 95% of the cases. The second 99.7% of the cases.
#However, to be able to affirm this, we need to check the histogram of each commodity, since this holds in
#a normal distribution.
ggplot(data = returns_long, aes(x = Return, fill = Commodity)) +
facet_wrap(~ Commodity) +
stat_function(fun = dnorm, args = list(mean = mean(returns_long$Return), sd = sd(returns_long$Return), col = "blue")) +
geom_histogram(bins = 50)
ggplot(data.frame(x = iris$Sepal.Length), aes(x = x)) +
stat_function(fun = dnorm, args = list(mean = mean(iris$Sepal.Length), sd = sd(iris$Sepal.Length)), color = "blue") +
labs(title = "PDF", x = "Sepal Length", y = "Density")
#We will have two measures of extremity. 2std from the mean and 3std from the mean.
#We can affirm that the first measure we are outside of 95% of the cases. The second 99.7% of the cases.
#However, to be able to affirm this, we need to check the histogram of each commodity, since this holds in
#a normal distribution.
ggplot(data = returns_long, aes(x = Return, fill = Commodity)) +
facet_wrap(~ Commodity) +
geom_histogram(bins = 50) +
stat_function(fun = dnorm, args = list(mean = mean(returns_long$Return),
sd = sd(returns_long$Return), col = "blue"))
mean(returns_long$Return)
returns = [complete.cases(returns), ] = returns = read.csv("returns_stocks_commodities.csv")
returns_no_date = returns[complete.cases(returns), ][-1]
returns = returns[complete.cases(returns), ] = returns = read.csv("returns_stocks_commodities.csv")
returns_long$Return
#We will have two measures of extremity. 2std from the mean and 3std from the mean.
#We can affirm that the first measure we are outside of 95% of the cases. The second 99.7% of the cases.
#However, to be able to affirm this, we need to check the histogram of each commodity, since this holds in
#a normal distribution.
ggplot(data = returns_long, aes(x = Return, fill = Commodity)) +
facet_wrap(~ Commodity) +
geom_histogram(bins = 50) +
stat_function(fun = dnorm, args = list(mean = mean(returns_long$Return),
sd = sd(returns_long$Return), col = "blue"))
mean(returns_long$Return)
returns = returns[complete.cases(returns), ] = returns = read.csv("returns_stocks_commodities.csv")
returns
any(is.na(returns_long$Return))
any(is.nan(returns_long$Return))
returns_long = returns_long[!is.na(returns_long$Return), ]
ggplot(data = returns_long, aes(x = Return, fill = Commodity)) +
facet_wrap(~ Commodity) +
geom_histogram(bins = 50) +
stat_function(fun = dnorm, args = list(mean = mean(returns_long$Return),
sd = sd(returns_long$Return), col = "blue"))
mean(returns_long$Return)
sd(returns_long$Return)
ggplot(data = returns_long, aes(x = Return, fill = Commodity)) +
facet_wrap(~ Commodity) +
stat_function(fun = dnorm, args = list(mean = mean(returns_long$Return),
sd = sd(returns_long$Return), col = "blue")) +
geom_histogram(bins = 50)
ggplot(data = returns_long, aes(x = Return, y = ..density.., fill = Commodity)) +
facet_wrap(~ Commodity) +
stat_function(fun = dnorm, args = list(mean = mean(returns_long$Return),
sd = sd(returns_long$Return), col = "blue")) +
geom_histogram(bins = 50)
ggplot(data = returns_long, aes(x = Return, y = ..density.., fill = Commodity)) +
facet_wrap(~ Commodity) +
geom_histogram(bins = 50) +
stat_function(fun = dnorm, args = list(mean = mean(returns_long$Return),
sd = sd(returns_long$Return), col = "blue"))
(data = returns_long, aes(x = Return, y = ..density.., fill = Commodity)) +
ggplot(data = returns_long, aes(x = Return, y = ..density.., fill = Commodity)) +
facet_wrap(~ Commodity) +
geom_histogram(bins = 50) +
stat_function(fun = dnorm, args = list(mean = mean(returns_long$Return),
sd = sd(returns_long$Return), col = "blue"))
ggplot(data = returns_long, aes(x = Return, y = ..density.., fill = Commodity)) +
facet_wrap(~ Commodity) +
geom_histogram(bins = 50) +
stat_function(fun = dnorm, args = list(mean = mean(returns_long$Return),
sd = sd(returns_long$Return), col = "blue"), inherit.aes = FALSE)
